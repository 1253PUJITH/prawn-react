{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sande\\\\Desktop\\\\project_main_folder\\\\react\\\\react\\\\myapp\\\\src\\\\ImagePredection\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport diseasesData from \"./diseasesData\"; // Import the diseases data\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImagePredection = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [prediction, setPrediction] = useState(\"\");\n  const [probabilities, setProbabilities] = useState({});\n  const [bestModel, setBestModel] = useState(\"\");\n  const [diseaseInfo, setDiseaseInfo] = useState({\n    description: \"\",\n    tips: []\n  });\n  const [labeledImage, setLabeledImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false); // ðŸ‘ˆ Loading state\n\n  const onAddImage = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      const imageUrl = URL.createObjectURL(file);\n      setImage(imageUrl);\n      setMessage(\"Image uploaded successfully! âœ…\");\n    }\n  };\n  const onPredict = async () => {\n    if (!selectedFile) {\n      alert(\"Please upload an image first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      setIsLoading(true); // ðŸ‘ˆ Show loading before API call\n\n      const response = await axios.post(\"http://127.0.0.1:5000/predict\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setTimeout(() => {\n        const {\n          predicted_disease,\n          probabilities,\n          labeled_image_base64,\n          best_model\n        } = response.data;\n        setPrediction(predicted_disease);\n        setProbabilities(probabilities);\n        setLabeledImage(labeled_image_base64);\n        setBestModel(best_model);\n        const diseaseDetails = diseasesData[predicted_disease] || {\n          description: \"No description available.\",\n          tips: []\n        };\n        setDiseaseInfo(diseaseDetails);\n        setIsLoading(false); // ðŸ‘ˆ Stop loading after delay\n      }, 3000); // ðŸ‘ˆ 3 seconds delay\n    } catch (error) {\n      console.error(\"Error during prediction\", error);\n      alert(\"There was an error with the prediction. Please try again.\");\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"predection-container\",\n    id: \"Prediction\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"predict-heading\",\n            children: \"Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-predection-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                id: \"upload-button\",\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: onAddImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-container\",\n              children: image && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: image,\n                alt: \"Uploaded\",\n                className: \"uploaded-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-container\",\n              children: message && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"success-message\",\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-container\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"predict-btn Ml\",\n                  onClick: onPredict,\n                  children: \"Predict\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"note-2\",\n                children: [\"Note:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this), \"For the best prediction and accurate results, please upload clear images of the prawn without any distractions. Ensure good lighting and focus on the affected area to improve probability scores and overall detection quality.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"note\",\n                children: \"Currently, this system detects Prawn Health Conditions, classifying them as Healthy, Black Gill, Black Spot , White Spot Disease. Simply upload an image to get instant results.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 7,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output-container\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                lg: 12,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"output-heading\",\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: isLoading ? \"Loading...\" : prediction || \"Output\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                lg: 6,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"output-predection\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"result-heading\",\n                    children: \"Probability:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-container\",\n                    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \" \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 25\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [bestModel && /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Model:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 128,\n                          columnNumber: 44\n                        }, this), \" \", bestModel]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 41\n                      }, this), Object.keys(probabilities).length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: Object.entries(probabilities).sort((a, b) => b[1] - a[1]).map(([disease, prob]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [disease, \": \", prob.toFixed(4)]\n                        }, disease, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 134,\n                          columnNumber: 35\n                        }, this))\n                      }, void 0, false)]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                lg: 6,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"labeled_images\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"result-heading\",\n                    children: \"Labeled Image:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"resultlabel-container\",\n                    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \" \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 25\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"result-label\",\n                      children: labeledImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: `data:image/png;base64,${labeledImage}`,\n                        alt: \"Labeled Disease Area\",\n                        className: \"labeled-image\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 154,\n                        columnNumber: 44\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                lg: 12,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"output-decription\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"result-heading\",\n                    children: \"Description:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-container\",\n                    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \" \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 25\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"description-text\",\n                        children: diseaseInfo.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 27\n                      }, this), diseaseInfo.tips && diseaseInfo.tips.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"prevention-tips\",\n                        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Prevention Tips:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 172,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 172,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                          children: diseaseInfo.tips.map((tip, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: tip\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 175,\n                            columnNumber: 35\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 173,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ImagePredection, \"oXVfnz9oIW5/BHpQ0MnK5w1YNQY=\");\n_c = ImagePredection;\nexport default ImagePredection;\nvar _c;\n$RefreshReg$(_c, \"ImagePredection\");","map":{"version":3,"names":["React","useState","Container","Row","Col","axios","diseasesData","jsxDEV","_jsxDEV","Fragment","_Fragment","ImagePredection","_s","image","setImage","message","setMessage","selectedFile","setSelectedFile","prediction","setPrediction","probabilities","setProbabilities","bestModel","setBestModel","diseaseInfo","setDiseaseInfo","description","tips","labeledImage","setLabeledImage","isLoading","setIsLoading","onAddImage","event","file","target","files","imageUrl","URL","createObjectURL","onPredict","alert","formData","FormData","append","response","post","headers","setTimeout","predicted_disease","labeled_image_base64","best_model","data","diseaseDetails","error","console","className","id","children","lg","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","src","alt","onClick","Object","keys","length","entries","sort","a","b","map","disease","prob","toFixed","tip","index","_c","$RefreshReg$"],"sources":["C:/Users/sande/Desktop/project_main_folder/react/react/myapp/src/ImagePredection/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport diseasesData from \"./diseasesData\"; // Import the diseases data\r\n\r\nconst ImagePredection = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [prediction, setPrediction] = useState(\"\");\r\n  const [probabilities, setProbabilities] = useState({});\r\n  const [bestModel, setBestModel] = useState(\"\");\r\n  const [diseaseInfo, setDiseaseInfo] = useState({ description: \"\", tips: [] });\r\n  const [labeledImage, setLabeledImage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false); // ðŸ‘ˆ Loading state\r\n\r\n  const onAddImage = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setSelectedFile(file);\r\n      const imageUrl = URL.createObjectURL(file);\r\n      setImage(imageUrl);\r\n      setMessage(\"Image uploaded successfully! âœ…\");\r\n    }\r\n  };\r\n\r\n  const onPredict = async () => {\r\n    if (!selectedFile) {\r\n      alert(\"Please upload an image first.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n\r\n    try {\r\n      setIsLoading(true); // ðŸ‘ˆ Show loading before API call\r\n\r\n      const response = await axios.post(\"http://127.0.0.1:5000/predict\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      setTimeout(() => {\r\n        const { predicted_disease, probabilities, labeled_image_base64, best_model } = response.data;\r\n\r\n        setPrediction(predicted_disease);\r\n        setProbabilities(probabilities);\r\n        setLabeledImage(labeled_image_base64);\r\n        setBestModel(best_model);\r\n\r\n        const diseaseDetails = diseasesData[predicted_disease] || { description: \"No description available.\", tips: [] };\r\n        setDiseaseInfo(diseaseDetails);\r\n\r\n        setIsLoading(false); // ðŸ‘ˆ Stop loading after delay\r\n      }, 3000); // ðŸ‘ˆ 3 seconds delay\r\n    } catch (error) {\r\n      console.error(\"Error during prediction\", error);\r\n      alert(\"There was an error with the prediction. Please try again.\");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"predection-container\" id=\"Prediction\">\r\n      <Container>\r\n        <Row>\r\n          <Col lg={12}>\r\n            <h1 className=\"predict-heading\">Prediction</h1>\r\n          </Col>\r\n          <Col lg={5}>\r\n            <div className=\"image-predection-container\">\r\n              <div className=\"input-container\">\r\n                <input\r\n                  className=\"input\"\r\n                  id=\"upload-button\"\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={onAddImage}\r\n                />\r\n              </div>\r\n              <div className=\"image-container\">\r\n                {image && <img src={image} alt=\"Uploaded\" className=\"uploaded-image\" />}\r\n              </div>\r\n              <div className=\"message-container\">\r\n                {message && <p className=\"success-message\">{message}</p>}\r\n              </div>\r\n\r\n              <div>\r\n                <div className=\"btn-container\">\r\n                  <button className=\"predict-btn Ml\" onClick={onPredict}>\r\n                    Predict\r\n                  </button>\r\n                </div>\r\n                <p className=\"note-2\">\r\n                  Note:\r\n                  <br />\r\n                  For the best prediction and accurate results, please upload clear images of the prawn without any distractions. Ensure good lighting and focus on the affected area to improve probability scores and overall detection quality.\r\n                </p>\r\n                <p className=\"note\">\r\n                  Currently, this system detects Prawn Health Conditions, classifying them as Healthy, Black Gill, Black Spot , White Spot Disease.\r\n                  Simply upload an image to get instant results.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col lg={7}>\r\n            <div className=\"output-container\">\r\n              <Row>\r\n                <Col lg={12}>\r\n                  <div className=\"output-heading\">\r\n                    <h1>{isLoading ? \"Loading...\" : prediction || \"Output\"}</h1>\r\n                  </div>\r\n                </Col>\r\n                <Col lg={6}>\r\n                  <div className=\"output-predection\">\r\n                    <h1 className=\"result-heading\">Probability:</h1>\r\n                    <div className=\"result-container\">\r\n                      {/* Empty content initially */}\r\n                      {isLoading ? (\r\n                        <p> </p>\r\n                      ) : (\r\n                        <>\r\n                          {bestModel && <p><strong>Model:</strong> {bestModel}</p>}\r\n                          {Object.keys(probabilities).length > 0 && (\r\n                            <>\r\n                              {Object.entries(probabilities)\r\n                                .sort((a, b) => b[1] - a[1])\r\n                                .map(([disease, prob]) => (\r\n                                  <p key={disease}>\r\n                                    {disease}: {prob.toFixed(4)}\r\n                                  </p>\r\n                                ))}\r\n                            </>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                <Col lg={6}>\r\n                  <div className=\"labeled_images\">\r\n                    <h1 className=\"result-heading\">Labeled Image:</h1>\r\n                    <div className=\"resultlabel-container\">\r\n                      {/* Empty content initially */}\r\n                      {isLoading ? (\r\n                        <p> </p>\r\n                      ) : (\r\n                        <div className=\"result-label\">\r\n                          {labeledImage && <img src={`data:image/png;base64,${labeledImage}`} alt=\"Labeled Disease Area\" className=\"labeled-image\" />}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                <Col lg={12}>\r\n                  <div className=\"output-decription\">\r\n                    <h1 className=\"result-heading\">Description:</h1>\r\n                    <div className=\"result-container\">\r\n                      {/* Empty content initially */}\r\n                      {isLoading ? (\r\n                        <p> </p>\r\n                      ) : (\r\n                        <>\r\n                          <p className=\"description-text\">{diseaseInfo.description}</p>\r\n                          {diseaseInfo.tips && diseaseInfo.tips.length > 0 && (\r\n                            <div className=\"prevention-tips\">\r\n                              <h5><strong>Prevention Tips:</strong></h5>\r\n                              <ul>\r\n                                {diseaseInfo.tips.map((tip, index) => (\r\n                                  <li key={index}>{tip}</li>\r\n                                ))}\r\n                              </ul>\r\n                            </div>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImagePredection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}