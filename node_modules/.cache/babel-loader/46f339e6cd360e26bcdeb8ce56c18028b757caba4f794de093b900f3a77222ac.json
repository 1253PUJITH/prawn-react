{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\myapp\\\\src\\\\ImagePredection\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImagePredection = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const onAddImage = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const imageUrl = URL.createObjectURL(file);\n      setImage(imageUrl);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"predection-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"predict-heading\",\n      children: \"Predict Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-predection-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            id: \"upload-button\",\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: onAddImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"Uploaded\",\n            className: \"uploaded-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"output-heading\",\n          children: \"Hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(ImagePredection, \"azb7M8tR7S/vp1+UqWJMufJLR5I=\");\n_c = ImagePredection;\nexport default ImagePredection;\nvar _c;\n$RefreshReg$(_c, \"ImagePredection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImagePredection","_s","image","setImage","onAddImage","event","file","target","files","imageUrl","URL","createObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","accept","onChange","src","alt","_c","$RefreshReg$"],"sources":["E:/react/myapp/src/ImagePredection/index.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './index.css'\r\n\r\nconst ImagePredection=()=>{\r\n    const [image, setImage] = useState(null);\r\n\r\n    const onAddImage = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const imageUrl = URL.createObjectURL(file);\r\n            setImage(imageUrl);\r\n        }\r\n    };\r\n    return (\r\n        <div className='predection-container'>\r\n            <h1 className='predict-heading'>Predict Images</h1>\r\n            <div>\r\n                <div className='image-predection-container'>\r\n                    <div className='input-container'>\r\n                        <input className=\"input\" id=\"upload-button\" type='file' accept=\"image/*\" onChange={onAddImage} />\r\n                    </div>\r\n                    <div className=\"image-container\">\r\n                        {image && <img src={image} alt=\"Uploaded\" className=\"uploaded-image\" />}\r\n                    </div>\r\n                </div>\r\n                <div className='output-container'>\r\n                    <h1 className='output-heading'>Hello</h1>\r\n                    <div>\r\n                        <p></p>\r\n                    </div>\r\n                    <div>\r\n                        <p></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePredection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}